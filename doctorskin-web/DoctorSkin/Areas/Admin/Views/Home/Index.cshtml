
@{
    ViewBag.Title = "Trang chủ";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";

}

<div class="overview-boxes">
    @*{{!-- đơn hàng --}}*@
    <div class="box">
        <div class="right-side">
            <div class="box-topic">Đơn hàng hôm nay</div>
            <div class="number">@ViewBag.bills.Count</div>
            @{
                if (ViewBag.compareToday == true)
                {
                    <div class="indicator">
                        <i class='bx bx-up-arrow-alt'></i>
                        <span class="text">Up from yesterday</span>
                    </div>
                }

                else
                {
                    <div class="indicator">
                        <i class='bx bx-minus-circle'></i>
                        <span class="text">No change from yesterday</span>
                    </div>
                }
            }
        </div>
        <i class='bx bx-cart-alt cart'></i>
    </div>
    @*{{!-- doanh thu --}}*@
    <div class="box">
        <div class="right-side">
            <div class="box-topic">Doanh thu</div>
            <div class="number">@ViewBag.revenue</div>
            @{
                if (ViewBag.compareRevenueMonth == true)
                {
                    <div class="indicator">
                        <i class='bx bx-up-arrow-alt'></i>
                        <span class="text">Up from Month ago</span>
                    </div>
                }
                else
                {
                    <div class="indicator">
                        <i class='bx bx-down-arrow-alt down'></i>
                        <span class="text">Down From yesterday</span>
                    </div>
                }
            }
        </div>
        <i class='bx bxs-cart-add cart two'></i>
    </div>
    @*{{!-- khách hàng mới --}}*@
    <div class="box">
        <div class="right-side">
            <div class="box-topic">Khách hàng mới</div>
            <div class="number">@ViewBag.newCustomer2Month.Count</div>
            @{
                if (ViewBag.compareCunstomer == true)
                {
                    <div class="indicator">
                        <i class='bx bx-up-arrow-alt'></i>
                        <span class="text">Up from the customer</span>
                    </div>
                }
                else
                {
                    <div class="indicator">
                        <i class='bx bx-down-arrow-alt'></i>
                        <span class="text">Down from the customer</span>
                    </div>
                }
            }
        </div>
        <i class='bx bx-cart cart three'></i>
    </div>
    @*{{!-- hài lòng --}}*@
    <div class="box">
        <div class="right-side">
            <div class="box-topic">Mức độ hài lòng</div>
            <div class="number">
                @ViewBag.starAve <span class="mx-1" style="font-size:2rem; color:gold">★</span>
            </div>
        </div>
        <i class='bx bxs-cart-download cart four'></i>
    </div>
</div>

<div class="sales-boxes">
    <div class="recent-sales box">
        <div class="title">THỐNG KÊ DOANH THU</div>
        <div class="sales-details">
            <div id="chart" style="width:100%"></div>
        </div>
        <div class="button">
            <a href="#">See All</a>
        </div>
    </div>

    <div class="top-sales box" style="height:520px;overflow:auto">
        <div class="title">Dịch vụ ưa thích</div>
        <ul class="top-sales-details" id="TopService">
            @foreach (var i in ViewBag.topServices)
            {
                <li>
                    <div style="display:flex;align-items:center">
                        <div>
                            <img style="width:90px;object-fit:contain; border-radius:8px" src="@i.img_sd" />
                        </div>
                        <div style="margin-left:8px">
                            <span>@i.name_sd</span>
                        </div>
                    </div>
                </li>
            }
            
        </ul>
    </div>
</div>

<div class="sales-boxes" style="margin-top: 20px">
    <div class="recent-sales box">
        <div class="title">THỐNG KÊ SỐ SẢN PHẨM BÁN RA</div>
        <div class="sales-details">
            <div id="chart2" style="width:100%"></div>
        </div>
        <div class="button">
            <a href="#">See All</a>
        </div>

      
    </div>

    <div class="top-sales box ">
        <div class="title">
            Sản phẩm bán chạy
            
        </div>
        @foreach (var i in ViewBag.topProducts)
        {
            <li>
                <div style="display:flex;align-items:center">
                    <div>
                        <img style="width:90px;object-fit:contain; border-radius:8px" src="@i.img" />
                    </div>
                    <div style="margin-left:8px">
                        <span>@i.namep</span>
                    </div>
                </div>
            </li>
        }
    </div>
</div>







<!-- apexcharts js -->
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.min.js" integrity="sha512-Dz4zO7p6MrF+VcOD6PUbA08hK1rv0hDv/wGuxSUjImaUYxRyK2gLC6eQWVqyDN9IM1X/kUA8zkykJS/gEVOd3w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    // databooking and datebooking
    const billsAll = @Html.Raw(Json.Encode(ViewBag.billsAll));

    const filteredbillsAll = billsAll.filter(e => e.status == "Thành công");
    const databillsAll = filteredbillsAll.map(e => e.totalbill);
    console.log(databillsAll)

    const datebillsAll = filteredbillsAll.map(e => {

        const timestamp = e.datebuy.match(/\d+/)[0];
        return parseInt(timestamp, 10);
    });

    const service = @Html.Raw(Json.Encode(ViewBag.service));
    const dataServices = service.map(ele => {
        return ele.amount*ele.price_sd
        });
    console.log(dataServices)


        var options = {
            series: [{
                name: 'DOANH THU',
                type: 'column',
                data: databillsAll
            }, {
                name: 'DỊCH VỤ',
                type: 'area',
                data: dataServices
            }, {
                name: 'KHÁC',
                type: 'line',
                data: [25000000, 20000000, 31000000]
            }],
            chart: {
                height: 350,
                type: 'line',
                stacked: false,
            },
            stroke: {
                width: [0, 2, 5],
                curve: 'smooth'
            },
            plotOptions: {
                bar: {
                    columnWidth: '100%'
                }
            },

            fill: {
                opacity: [0.85, 0.25, 1],
                gradient: {
                    inverseColors: false,
                    shade: 'light',
                    type: "vertical",
                    opacityFrom: 0.85,
                    opacityTo: 0.55,

                    stops: [0, 100, 100, 100]
                }
            },
            labels: datebillsAll,
            markers: {
                size: 0
            },
            xaxis: {
                type: 'datetime'
            },
            yaxis: {
                title: {
                    text: 'Triệu(VND)',
                },
                min: 0
            },
            tooltip: {
                shared: true,
                intersect: false,
                y: {
                  formatter: function (y) {
                      if (typeof y !== "undefined" || y !=null) {
                          // Chuyển đổi giá trị số sang chuỗi tiền tệ VND
                          const formatter = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' });
                          const vndValue = formatter.format(y);
                          return vndValue;
                      }
                      return 0 + " VND";
                  }
                }
            }
        };
        var chart = new ApexCharts(document.querySelector("#chart"), options);
        chart.render();

    //Loại sản phẩm
    const categories = @Html.Raw(Json.Encode(ViewBag.brands));

    // thống kê sản phẩm ở chart 2
    const products = @Html.Raw(Json.Encode(ViewBag.products));
    //console.log(products)
    const productbuy = {};
    for (let i = 0; i < products.length; i++)
    {
        //type sản phẩm
        const producttype = products[i].typep;
        
        let buycount = 0;
        if (producttype in productbuy)
        {
            buycount = productbuy[producttype]
        }
        for (let j = 0; j < billsAll.length; j++)
        {
            const booking = billsAll[j];
            if (booking.idp == products[i].idp)
            {
                buycount = buycount+booking.quantity;
            }
         }
        productbuy[producttype] = buycount;
    }

    var updatedObject = {};
    categories.forEach(function (obj) {
        var id = obj.typep;
        var value = productbuy[id];

        if (value !== undefined) {
            updatedObject[obj.namec] = value;
        }
    });

    console.log(updatedObject)

    const producttypes = Object.keys(updatedObject);
    const buycounts = Object.values(updatedObject);
        var options2 = {
            series: buycounts,
            chart: {
                width: 380,
                type: 'pie',
            },
            labels: producttypes,
            responsive: [{
                breakpoint: 480,
                options: {
                    chart: {
                        width: 200
                    },
                    legend: {
                        position: 'bottom'
                    }
                }
            }]
        };
    var chart2 = new ApexCharts(document.querySelector("#chart2"), options2);
    chart2.render();

</script>
